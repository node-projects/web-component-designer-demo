import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const triangleCss = ":host(.top) div.triangle{bottom:unset;top:-34px;transform:scale(0.7) translate(50%, 0)}div.triangle{z-index:1;position:absolute;bottom:-34px;left:var(--stylo-toolbar-triangle-start);width:40px;height:40px;overflow:hidden;transform:scale(0.7) rotate(180deg) translate(50%, 0)}div.triangle:after{content:\"\";position:absolute;width:24px;height:24px;background:white;transform:rotate(45deg);top:28px;left:8px;--box-shadow:0 4px 16px 0 rgba(0, 0, 0, 0.12);box-shadow:var(--stylo-box-shadow, var(--box-shadow));border:var(--stylo-border)}";

const Separator = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.mobile = undefined;
  }
  render() {
    if (this.mobile) {
      return undefined;
    }
    return h("div", { class: "triangle" });
  }
  static get style() { return triangleCss; }
}, [1, "stylo-toolbar-triangle", {
    "mobile": [4]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["stylo-toolbar-triangle"];
  components.forEach(tagName => { switch (tagName) {
    case "stylo-toolbar-triangle":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Separator);
      }
      break;
  } });
}
defineCustomElement();

export { Separator as S, defineCustomElement as d };
