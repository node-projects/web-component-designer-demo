import { c as createStore } from './index2.js';

const en = {
  lang: 'en',
  plugins: {
    huge_title: 'Huge title',
    large_title: 'Large title',
    small_title: 'Small title',
    paragraph: 'Paragraph',
    separator: 'Separator',
    unordered_list: 'Bulleted list',
    ordered_list: 'Numbered list',
    image: 'Image',
    code: 'Code',
    no_matches: 'No matches',
    blockquote: 'Blockquote'
  },
  add: {
    placeholder: 'Press "/" for plugins',
    add_element: 'Add a new part'
  },
  toolbar: {
    align_left: 'Align left',
    align_center: 'Align center',
    align_right: 'Align right',
    font_size: 'Font size',
    list_ol: 'Ordered list',
    list_ul: 'Unordered list',
    style_list: 'Style list',
    style_align: 'Style alignment',
    style_font_size: 'Style font size',
    style_color: 'Style color',
    style_background: 'Style background',
    link: 'Create or remove link',
    bold: 'Bold',
    italic: 'Italic',
    underline: 'Underline',
    strikethrough: 'Strikethrough'
  },
  menus: {
    img_width_original: 'Original image width',
    img_width_large: 'Large image width',
    img_width_medium: 'Medium image width',
    img_width_small: 'Small image width',
    img_delete: 'Delete image'
  }
};

const { state, onChange } = createStore(en);
const esI18n = async () => {
  const { es } = await import('./es.js');
  return es;
};
const deI18n = async () => {
  const { de } = await import('./de.js');
  return de;
};
const nlI18n = async () => {
  const { nl } = await import('./nl.js');
  return nl;
};
const jaI18n = async () => {
  const { ja } = await import('./ja.js');
  return ja;
};
const enI18n = () => en;
onChange('lang', async (lang) => {
  let bundle;
  switch (lang) {
    case 'es':
      bundle = await esI18n();
      break;
    case 'de':
      bundle = await deI18n();
      break;
    case 'nl':
      bundle = await nlI18n();
      break;
    case 'ja':
      bundle = await jaI18n();
      break;
    default:
      bundle = enI18n();
  }
  Object.assign(state, Object.assign({ custom: state.custom }, bundle));
});
const i18n = { state };

export { i18n as i };
