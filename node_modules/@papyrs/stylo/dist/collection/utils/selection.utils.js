import { getSelection as getDocumentSelection } from '@deckdeckgo/utils';
/**
 * The document selection or, if a container is provided
 */
export const getSelection = (container) => {
  // https://stackoverflow.com/questions/62054839/shadowroot-getselection
  // https://twitter.com/bocoup/status/1459120675390689284?s=20
  // https://github.com/WICG/webcomponents/issues/79
  if (isShadowRoot(container) && hasShadowRootSelectionApi(container)) {
    return getShadowRootSelection(container);
  }
  return getDocumentSelection();
};
const isShadowRoot = (container) => (container === null || container === void 0 ? void 0 : container.getRootNode()) instanceof ShadowRoot;
const hasShadowRootSelectionApi = (container) => (container === null || container === void 0 ? void 0 : container.getRootNode()).getSelection;
const getShadowRootSelection = (container) => container.getRootNode().getSelection();
export const getRange = (container) => {
  const selection = getSelection(container);
  if (!selection || selection.rangeCount <= 0) {
    return {
      range: null,
      selection: null
    };
  }
  return {
    selection,
    range: selection.getRangeAt(0)
  };
};
export const deleteRange = (range) => {
  const { startOffset, endOffset } = range;
  const textSelected = startOffset !== endOffset;
  if (!textSelected) {
    return;
  }
  range.extractContents();
};
//# sourceMappingURL=selection.utils.js.map
