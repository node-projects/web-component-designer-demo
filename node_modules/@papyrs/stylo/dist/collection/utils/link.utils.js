import { isFirefox } from '@deckdeckgo/utils';
import { toHTMLElement } from './node.utils';
import { getRange } from './selection.utils';
export const createLink = ({ range, linkUrl }) => {
  const fragment = range.extractContents();
  const a = createLinkElementForFragment({ fragment, linkUrl });
  range.insertNode(a);
};
export const removeLink = (container) => {
  const { range, selection } = getRange(container);
  if (!range) {
    return;
  }
  if (isFirefox()) {
    removeFirefoxLink(selection);
    return;
  }
  const anchor = toHTMLElement(selection.anchorNode);
  const fragment = range.extractContents();
  anchor.parentElement.replaceChild(fragment, anchor);
};
const removeFirefoxLink = (selection) => {
  const container = toHTMLElement(selection.anchorNode);
  if (!container || container.nodeName.toLowerCase() !== 'a') {
    return;
  }
  container.parentElement.insertBefore(document.createTextNode(container.textContent), container);
  container.parentElement.removeChild(container);
};
const createLinkElementForFragment = ({ fragment, linkUrl }) => {
  const a = createLinkElement({ linkUrl });
  a.appendChild(fragment);
  return a;
};
export const createLinkElement = ({ linkUrl }) => {
  const a = document.createElement('a');
  a.href = linkUrl;
  a.rel = 'noopener noreferrer';
  a.target = '_blank';
  return a;
};
//# sourceMappingURL=link.utils.js.map
