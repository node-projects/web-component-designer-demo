import { Component, Event, h, Host, Prop } from '@stencil/core';
import configStore from '../../../../../stores/config.store.js';
import i18n from '../../../../../stores/i18n.store.js';
import { ToolbarAlign } from '../../../../../types/toolbar.js';
import { execCommandAlign } from '../../../../../utils/execcommand-align.utils.js';
import { execCommandNativeAlign } from '../../../../../utils/execcommnad-native.utils.js';
import { IconAlignCenter } from '../../../../icons/align-center.js';
import { IconAlignLeft } from '../../../../icons/align-left.js';
import { IconAlignRight } from '../../../../icons/align-right.js';
export class Align {
  justifyContent($event, align) {
    $event.stopPropagation();
    if (configStore.state.toolbar.command === 'native') {
      execCommandNativeAlign(align);
    }
    else {
      execCommandAlign(this.anchorEvent, this.containerRef, align);
    }
    this.alignModified.emit();
  }
  render() {
    return (h(Host, null,
      h("stylo-toolbar-button", { label: i18n.state.toolbar.align_left, onAction: ($event) => this.justifyContent($event.detail, ToolbarAlign.LEFT), class: this.align === ToolbarAlign.LEFT ? 'active' : undefined },
        h(IconAlignLeft, null)),
      h("stylo-toolbar-button", { label: i18n.state.toolbar.align_center, onAction: ($event) => this.justifyContent($event.detail, ToolbarAlign.CENTER), class: this.align === ToolbarAlign.CENTER ? 'active' : undefined },
        h(IconAlignCenter, null)),
      h("stylo-toolbar-button", { label: i18n.state.toolbar.align_right, onAction: ($event) => this.justifyContent($event.detail, ToolbarAlign.RIGHT), class: this.align === ToolbarAlign.RIGHT ? 'active' : undefined },
        h(IconAlignRight, null))));
  }
  static get is() { return "stylo-toolbar-align"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["align.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["align.css"]
  }; }
  static get properties() { return {
    "anchorEvent": {
      "type": "unknown",
      "mutable": false,
      "complexType": {
        "original": "MouseEvent | TouchEvent",
        "resolved": "MouseEvent | TouchEvent",
        "references": {
          "MouseEvent": {
            "location": "global"
          },
          "TouchEvent": {
            "location": "global"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      }
    },
    "align": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "ToolbarAlign",
        "resolved": "ToolbarAlign.CENTER | ToolbarAlign.LEFT | ToolbarAlign.RIGHT",
        "references": {
          "ToolbarAlign": {
            "location": "import",
            "path": "../../../../../types/toolbar"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "align",
      "reflect": false
    },
    "containerRef": {
      "type": "unknown",
      "mutable": false,
      "complexType": {
        "original": "HTMLElement | undefined",
        "resolved": "HTMLElement",
        "references": {
          "HTMLElement": {
            "location": "global"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      }
    }
  }; }
  static get events() { return [{
      "method": "alignModified",
      "name": "alignModified",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      }
    }]; }
}
