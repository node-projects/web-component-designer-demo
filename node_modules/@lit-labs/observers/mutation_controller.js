class t{constructor(t,{target:s,config:i,callback:h,skipInitial:n}){this.t=!1,this.i=!1,this.callback=()=>!0,(this.h=t).addController(this),this.o=null===s||null!=s?s:this.h,this.l=i,this.t=null!=n?n:this.t,this.callback=null!=h?h:this.callback,window.MutationObserver?this.u=new MutationObserver((t=>{this.handleChanges(t),this.h.requestUpdate()})):console.warn("MutationController error: browser does not support MutationObserver.")}handleChanges(t){this.value=this.callback(t,this.u)}hostConnected(){this.o&&this.observe(this.o)}hostDisconnected(){this.disconnect()}async hostUpdated(){const t=this.u.takeRecords();(t.length||!this.t&&this.i)&&this.handleChanges(t),this.i=!1}observe(t){this.u.observe(t,this.l),this.i=!0,this.h.requestUpdate()}disconnect(){this.u.disconnect()}}export{t as MutationController};
//# sourceMappingURL=mutation_controller.js.map
