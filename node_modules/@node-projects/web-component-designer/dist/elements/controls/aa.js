/**
   * Split View is an image comparison component
   *
   * <split-view>
   *   <picture slot="top">[...]</picture>
   *   <picture slot="bottom">[...]</picture>
   * </split-view>
   *
   * Options are;
   *
   * start (number) The point where the comparison line should start (0 = left, 1000 = right)
   * mode (string) A CSS mix-blend-mode to use for comparison
   */
import { BaseCustomWebComponentConstructorAppend, css, html } from '/web-component-designer-demo/node_modules/@node-projects/base-custom-webcomponent/./dist/index.js';
export class SimpleSplitView extends BaseCustomWebComponentConstructorAppend {
    static style = css `
    :host {
      display: block;
    }
    :host([hidden]) { display: none }
    .split {
      position: relative;
      height: 100%;
      display: grid;
      align-items: center;
      --split: 100;
    }
    .top,
    .bottom {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
    .bottom {
      background-color: red;
    }
    .top {
      z-index: 2;
      right: calc(8px + (((100% - 16px) / 100) * (100 - var(--split))));
      overflow: hidden;
      border-right: 1px solid white;
    }
    input {
      position: absolute;
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      z-index: 3;
      background-color: transparent;
      -webkit-appearance: none;
    }
    input[type="range"]:focus {
      outline: var(--outline, -webkit-focus-ring-color auto 1px);
    }`;
    static template = html `
    <div class="split" id="split" role="img" aria-label="Comparison of two images">
      <div class="bottom" id="bottom" aria-label="First image to compare">
        <slot name="bottom"></slot>
      </div>
      <div class="top" id="top" aria-label="Second image to compare">
        <slot name="top"></slot>  
      </div>
      <label id="label" for="slider">Slide left and right to compare images</label>
      <input type="range" role="slider" min="0" max="100" value="50" name="slider" id="slider" aria-labelledby="label" aria-valuemin="0" aria-valuemax="100">
    </div>`;
    static properties = {
        start: Number
    };
    constructor() {
        super();
    }
    start;
    ready() {
        this._parseAttributesToProperties();
        const splitter = this._getDomElement("split");
        const slider = this._getDomElement("slider");
        const label = this._getDomElement("label");
        const top = this._getDomElement("top");
        const splitViewLabelText = this.getAttribute("split-view-label") || 'Comparison of two images';
        const sliderLabelText = this.getAttribute("slider-label") || 'Press left and right to compare images';
        const mode = this.getAttribute("mode") || "normal";
        slider.addEventListener("input", (event) => {
            const split = +event.target.value;
            splitter.style.setProperty("--split", split);
            slider.setAttribute('aria-valuenow', split);
        });
        splitter.style.setProperty("--split", this.start);
        slider.setAttribute('aria-valuenow', this.start);
        slider.value = this.start;
        splitter.setAttribute('aria-label', splitViewLabelText);
        label.innerText = sliderLabelText;
        top.style.mixBlendMode = mode;
    }
}
customElements.define('node-projects-simple-split-view', SimpleSplitView);
