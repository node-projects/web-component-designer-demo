import { BaseCustomWebComponent, css } from "./BaseCustomWebComponent.js";
import { TypedEvent } from "../../basic/TypedEvent.js";
export class DesignerTabControl extends BaseCustomWebComponent {
  constructor() {
    super();
    this._selectedIndex = -1;
    this.onSelectedTabChanged = new TypedEvent();
    this._contentObserver = new MutationObserver(() => {
      this._createItems();
    });
    let outerDiv = document.createElement("div");
    outerDiv.className = 'outer';
    this.shadowRoot.appendChild(outerDiv);
    this._headerDiv = document.createElement("div");
    this._headerDiv.className = 'header';
    outerDiv.appendChild(this._headerDiv);
    this._panels = document.createElement("div");
    this._panels.className = 'panels';
    outerDiv.appendChild(this._panels);

    let _slot = document.createElement("slot");

    _slot.name = 'panels';

    this._panels.appendChild(_slot);
  }

  connectedCallback() {
    this._createItems();

    this._selectedIndexChanged();

    this._contentObserver.observe(this, {
      childList: true
    });

    let selectedIndexAttribute = this.getAttribute("selected-index");

    if (selectedIndexAttribute) {
      this.selectedIndex = parseInt(selectedIndexAttribute);
    }
  }

  get selectedIndex() {
    return this._selectedIndex;
  }

  set selectedIndex(value) {
    let old = this._selectedIndex;
    this._selectedIndex = value;
    if (this._headerDiv.children.length) this._selectedIndexChanged(old);
  }

  disconnectedCallback() {
    this._contentObserver.disconnect();
  }

  _createItems() {
    this._headerDiv.innerHTML = "";
    let i = 0;

    for (let item of this.children) {
      let htmlItem = item;
      let tabHeaderDiv = document.createElement("div");
      tabHeaderDiv.innerText = htmlItem.title;
      tabHeaderDiv.className = 'tab-header';
      let j = i;

      tabHeaderDiv.onpointerdown = () => {
        this.selectedIndex = j;
      };

      this._headerDiv.appendChild(tabHeaderDiv);

      i++;
    }

    this._selectedIndexChanged();
  }

  _selectedIndexChanged(oldIndex) {
    for (let index = 0; index < this.children.length; index++) {
      const element = this.children[index];

      if (index == this._selectedIndex) {
        element.slot = "panels";

        this._headerDiv.children[index].classList.add('selected'); //bugfix sometimes not shown content


        if (!element.clientWidth) {
          let oldDisplay = element.style.display;

          this._bugfixNotShownContent(element, oldDisplay);
        }
      } else {
        element.removeAttribute("slot");

        this._headerDiv.children[index].classList.remove('selected');
      }
    }

    this.onSelectedTabChanged.emit({
      newIndex: this._selectedIndex,
      oldIndex: oldIndex
    });
  }

  _bugfixNotShownContent(element, oldDisplay) {
    requestAnimationFrame(() => {
      element.style.display = 'none';
      element.style.display = oldDisplay;
      if (!element.clientWidth) this._bugfixNotShownContent(element, oldDisplay);
    });
  }

}
DesignerTabControl.style = css`
        :host {
            height: 100%;
        }
        .outer {
            display: flex; 
            flex-direction: column; 
            height: 100%;
        }
        .header {
            display: inline-flex; 
            user-select: none; 
            flex-direction: row; 
            cursor: pointer; 
            height: 30px;
            background-color: var(--dark-grey, #232733);
        }
        .tab-header {
            font-family: Arial;
            display: flex;
            justify-content: center;
            align-items: center;                
            text-transform: uppercase;                
            box-sizing: content-box;                
            padding-left: 10px;
            padding-right: 10px;
            color: white;
            font-size: 12px;
            font-weight: 500;
            line-height: 1.5;
            letter-spacing: 1px;
        }
        .tab-header:hover {
            background: var(--light-grey, #383f52);
        }
        .selected {
            pointer-events: none;
            background: var(--medium-grey, #2f3545);
            box-shadow: inset 0 3px 0 var(--highlight-pink, #e91e63);
        }
        .panels {
            background: var(--medium-grey, #2f3545);
            height: calc(100% - 30px);
        }
        `;
customElements.define('node-projects-designer-tab-control', DesignerTabControl);