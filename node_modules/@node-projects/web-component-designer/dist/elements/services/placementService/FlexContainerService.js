"use strict";
/*
import { IPoint } from '../../../interfaces/IPoint.js';
import { IContainerService } from './IContainerService.js';
import { IDesignItem } from '../../elements/item/IDesignItem';

export class FlexContainerService implements IContainerService {

  serviceForContainer(container: IDesignItem) {
    return (container.styles.get('display')) === 'flex';
  }

  canEnter(container: IDesignItem, items: IDesignItem[]) {
    return true;
  }

  canLeave(container: IDesignItem, items: IDesignItem[]) {
    return true;
  }

  startPlace(container: IDesignItem, items: IDesignItem[]) {
    throw new Error("Method not implemented.");
  }

  place(container: IDesignItem, items: IDesignItem[]) {
    throw new Error("Method not implemented.");
  }

  finishPlace(container: IDesignItem, items: IDesignItem[]) {
    throw new Error("Method not implemented.");
  }

  enter(container: IDesignItem, items: IDesignItem[]) {
    throw new Error("Method not implemented.");
  }

  leave(container: IDesignItem, items: IDesignItem[]) {
    throw new Error("Method not implemented.");
  }
}
*/ 
