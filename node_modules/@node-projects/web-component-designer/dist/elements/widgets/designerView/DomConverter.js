import { IndentedTextWriter } from "../../helper/IndentedTextWriter.js";
export class DomConverter {
  static normalizeAttributeValue(value) {
    return value.replace(/"/g, '&quot;');
  }

  static normalizeContentValue(value) {
    return value.replace(/</g, '&lt;');
  }

  static IsSelfClosingElement(tag) {
    return tag === 'area' || tag === 'base' || tag === 'br' || tag === 'col' || tag === 'embed' || tag === 'hr' || tag === 'iframe' || tag === 'img' || tag === 'input' || tag === 'link' || tag === 'meta' || tag === 'param' || tag === 'source' || tag === 'track';
  }

  static ConvertToString(designItem) {
    let itw = new IndentedTextWriter();
    let options = {
      beautifyOutput: true,
      writeDesignerProperties: true
    };

    if (designItem.hasChildren) {
      for (let d of designItem.children()) {
        d.serviceContainer.forSomeServicesTillResult('htmlWriterService', s => {
          if (s.canWrite(d)) s.write(itw, d, options);
        });
      }
    }

    return itw.getString();
  }

}