import { AbstractExtension } from './AbstractExtension.js';
export class SelectionDefaultExtension extends AbstractExtension {
    _rect;
    constructor(extensionManager, designerView, extendedItem) {
        super(extensionManager, designerView, extendedItem);
    }
    extend() {
        this.refresh();
    }
    refresh() {
        const itemRect = this.extendedItem.element.getBoundingClientRect();
        const computedStyle = getComputedStyle(this.extendedItem.element);
        const left = Number.parseFloat(computedStyle.marginLeft.replace('px', ''));
        const top = Number.parseFloat(computedStyle.marginTop.replace('px', ''));
        const right = Number.parseFloat(computedStyle.marginRight.replace('px', ''));
        const bottom = Number.parseFloat(computedStyle.marginBottom.replace('px', ''));
        this._rect = this._drawRect((itemRect.x - this.designerCanvas.containerBoundingRect.x - left) / this.designerCanvas.scaleFactor, (itemRect.y - this.designerCanvas.containerBoundingRect.y - top) / this.designerCanvas.scaleFactor, (left + itemRect.width + right) / this.designerCanvas.scaleFactor, (top + itemRect.height + bottom) / this.designerCanvas.scaleFactor, 'svg-selection', this._rect);
    }
    dispose() {
        this._removeAllOverlays();
    }
}
