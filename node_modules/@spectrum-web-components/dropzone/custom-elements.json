{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "sp-dropzone.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sp-dropzone",
          "declaration": {
            "name": "Dropzone",
            "module": "/src/Dropzone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Dropzone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Dropzone",
          "slots": [
            {
              "description": "The default slot on an `sp-dropzone` is a great place to place upload instructions built with an `sp-illustrated-message` or other information, possibly even built from data provided by the upload, to support users successfully interacting with the drag and drop based features of your application",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dropEffect",
              "type": {
                "text": "'copy' | 'move' | 'link' | 'none'"
              },
              "privacy": "public",
              "description": "Controls the feedback (typically visual) the user is given during a drag and drop operation",
              "attribute": "dropEffect"
            },
            {
              "kind": "field",
              "name": "_dropEffect",
              "type": {
                "text": "DropEffects"
              },
              "privacy": "private",
              "default": "'copy'"
            },
            {
              "kind": "field",
              "name": "isDragged",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "dragged",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "debouncedDragLeave",
              "type": {
                "text": "number | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "onDragOver",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onDragLeave",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onDrop",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearDebouncedDragLeave",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "events": [
            {
              "description": "A cancellable event that confirms whether or not a file dropped on the UI should be accepted.",
              "name": "sp-dropzone-should-accept"
            },
            {
              "description": "Announces when files have been dragged over the UI, but not yet dropped.",
              "name": "sp-dropzone-dragover"
            },
            {
              "description": "Announces when dragged files have been moved out of the UI without having been dropped.",
              "name": "sp-dropzone-dragleave"
            },
            {
              "description": "Announces when dragged files have been dropped on the UI.",
              "name": "sp-dropzone-drop"
            }
          ],
          "attributes": [
            {
              "name": "dropEffect",
              "type": {
                "text": "'copy' | 'move' | 'link' | 'none'"
              },
              "description": "Controls the feedback (typically visual) the user is given during a drag and drop operation",
              "fieldName": "dropEffect"
            },
            {
              "name": "dragged",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isDragged"
            }
          ],
          "superclass": {
            "name": "SpectrumElement",
            "package": "@spectrum-web-components/base"
          },
          "tagName": "sp-dropzone",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Dropzone",
          "declaration": {
            "name": "Dropzone",
            "module": "src/Dropzone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/dropzone.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css`\n:host{border-radius:var(\n--spectrum-dropzone-border-radius,var(--spectrum-alias-border-radius-regular)\n);border-style:dashed;border-width:var(\n--spectrum-dropzone-border-width,var(--spectrum-alias-border-size-thick)\n);padding:var(\n--spectrum-dropzone-padding,var(--spectrum-global-dimension-size-900)\n);text-align:center}:host([dragged]){border-style:solid}:host(:focus){border-style:dashed;outline:0}:host(:focus.focus-visible){border-style:solid}:host(:focus:focus-visible){border-style:solid}:host{border-color:var(\n--spectrum-dropzone-border-color,var(--spectrum-global-color-gray-300)\n)}:host([dragged]){background-color:var(\n--spectrum-dropzone-background-color-selected-hover,var(--spectrum-alias-highlight-selected)\n);border-color:var(\n--spectrum-dropzone-border-color-selected-hover,var(--spectrum-global-color-blue-400)\n)}:host([dragged]) ::slotted(*){color:var(\n--spectrum-global-color-blue-400\n)}:host(:focus){border-color:var(\n--spectrum-dropzone-border-color,var(--spectrum-global-color-gray-300)\n)}:host(:focus) ::slotted(*){color:var(\n--spectrum-global-color-static-gray-500,#bcbcbc\n)}:host(:focus.focus-visible){border-color:var(\n--spectrum-dropzone-border-color-selected-hover,var(--spectrum-global-color-blue-400)\n)}:host(:focus:focus-visible){border-color:var(\n--spectrum-dropzone-border-color-selected-hover,var(--spectrum-global-color-blue-400)\n)}:host(:focus[dragged].focus-visible) ::slotted(*){color:var(\n--spectrum-global-color-blue-400\n)}:host(:focus[dragged]:focus-visible) ::slotted(*){color:var(\n--spectrum-global-color-blue-400\n)}:host{--spectrum-dropzone-illustration-color:var(\n--spectrum-global-color-static-blue-400\n);display:block}::slotted(*){font-family:var(\n--spectrum-body-m-text-font-family,var(--spectrum-alias-body-text-font-family)\n);font-size:var(\n--spectrum-body-s-text-size,var(--spectrum-alias-font-size-default)\n);font-style:var(\n--spectrum-body-s-text-font-style,var(--spectrum-global-font-style-regular)\n);font-weight:var(\n--spectrum-body-s-text-font-weight,var(--spectrum-alias-body-text-font-weight)\n);letter-spacing:var(\n--spectrum-body-s-text-letter-spacing,var(--spectrum-global-font-letter-spacing-none)\n);line-height:var(\n--spectrum-body-s-text-line-height,var(--spectrum-alias-body-text-line-height)\n);margin-bottom:0;margin-top:0;text-transform:var(--spectrum-body-s-text-transform,none)}:host([dragged]) ::slotted(*){--spectrum-global-color-gray-500:var(\n--spectrum-dropzone-illustration-color\n)}\n`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/dropzone.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Dropzone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/spectrum-dropzone.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css`\n:host{border-radius:var(\n--spectrum-dropzone-border-radius,var(--spectrum-alias-border-radius-regular)\n);border-style:dashed;border-width:var(\n--spectrum-dropzone-border-width,var(--spectrum-alias-border-size-thick)\n);padding:var(\n--spectrum-dropzone-padding,var(--spectrum-global-dimension-size-900)\n);text-align:center}:host([dragged]){border-style:solid}:host(:focus){border-style:dashed;outline:0}:host(:focus.focus-visible){border-style:solid}:host(:focus:focus-visible){border-style:solid}:host{border-color:var(\n--spectrum-dropzone-border-color,var(--spectrum-global-color-gray-300)\n)}:host([dragged]){background-color:var(\n--spectrum-dropzone-background-color-selected-hover,var(--spectrum-alias-highlight-selected)\n);border-color:var(\n--spectrum-dropzone-border-color-selected-hover,var(--spectrum-global-color-blue-400)\n)}:host([dragged]) ::slotted(*){color:var(\n--spectrum-global-color-blue-400\n)}:host(:focus){border-color:var(\n--spectrum-dropzone-border-color,var(--spectrum-global-color-gray-300)\n)}:host(:focus) ::slotted(*){color:var(\n--spectrum-global-color-static-gray-500,#bcbcbc\n)}:host(:focus.focus-visible){border-color:var(\n--spectrum-dropzone-border-color-selected-hover,var(--spectrum-global-color-blue-400)\n)}:host(:focus:focus-visible){border-color:var(\n--spectrum-dropzone-border-color-selected-hover,var(--spectrum-global-color-blue-400)\n)}:host(:focus[dragged].focus-visible) ::slotted(*){color:var(\n--spectrum-global-color-blue-400\n)}:host(:focus[dragged]:focus-visible) ::slotted(*){color:var(\n--spectrum-global-color-blue-400\n)}\n`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/spectrum-dropzone.css.ts"
          }
        }
      ]
    }
  ]
}
